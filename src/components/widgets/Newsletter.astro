---
import { Icon } from 'astro-icon/components';

export interface Props {
  title?: string;
  subtitle?: string;
  className?: string;
}

const {
  title = "Stay Updated",
  subtitle = "Get notified about new blog posts, research updates, and project releases.",
  className = ""
} = Astro.props;
---

<section class={`relative py-16 px-6 ${className}`}>
  <div class="max-w-4xl mx-auto text-center">
    <div class="scroll-reveal">
      <h2 class="text-3xl md:text-4xl font-bold mb-4 text-gradient-animated">
        {title}
      </h2>
      <p class="text-lg text-gray-600 dark:text-slate-300 mb-8 max-w-2xl mx-auto">
        {subtitle}
      </p>
    </div>
    
    <div class="scroll-reveal max-w-md mx-auto">
      <form id="newsletter-form" class="flex flex-col sm:flex-row gap-4">
        <div class="flex-1">
          <input
            type="email"
            id="email"
            placeholder="Enter your email address"
            required
            class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-slate-600 bg-white dark:bg-slate-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200"
          />
        </div>
        <button
          type="submit"
          class="px-6 py-3 bg-primary hover:bg-primary-600 text-white font-medium rounded-lg transition-all duration-200 shadow-lg hover:shadow-xl flex items-center justify-center gap-2 whitespace-nowrap"
        >
          <Icon name="tabler:mail" class="w-4 h-4" />
          Subscribe
        </button>
      </form>
      
      <p class="text-sm text-gray-500 dark:text-slate-400 mt-4">
        No spam, unsubscribe anytime. I respect your privacy.
      </p>
    </div>
    
    <!-- Success/Error Messages -->
    <div id="newsletter-message" class="hidden mt-4 p-4 rounded-lg"></div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('newsletter-form') as HTMLFormElement;
    const messageDiv = document.getElementById('newsletter-message') as HTMLElement;
    
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const email = (document.getElementById('email') as HTMLInputElement).value;
        const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
        
        // Show loading state
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<svg class="animate-spin w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Subscribing...';
        
        try {
          // For now, just show success (you can integrate with email service later)
          await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call
          
          messageDiv.className = 'mt-4 p-4 rounded-lg bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';
          messageDiv.textContent = 'üéâ Successfully subscribed! Welcome to the newsletter.';
          messageDiv.classList.remove('hidden');
          
          form.reset();
          
          // Track subscription (optional analytics)
          console.log('Newsletter signup:', email);
          
        } catch (error) {
          messageDiv.className = 'mt-4 p-4 rounded-lg bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';
          messageDiv.textContent = '‚ùå Something went wrong. Please try again.';
          messageDiv.classList.remove('hidden');
        }
        
        // Reset button
        submitBtn.disabled = false;
        submitBtn.innerHTML = '<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg>Subscribe';
        
        // Hide message after 5 seconds
        setTimeout(() => {
          messageDiv.classList.add('hidden');
        }, 5000);
      });
    }
  });
</script>
